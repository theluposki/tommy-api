{"version":3,"sources":["../../src/db/mariadb.ts","../../src/config.ts","../../src/db/createTables.ts"],"sourcesContent":["import mariadb, { Pool, Connection } from \"mariadb\";\nimport config from \"../config.ts\";\nimport { createTables } from \"./createTables.ts\";\n\nconst pool: Pool = mariadb.createPool(config.mariadb);\n\npool\n  .getConnection()\n  .then((conn: Connection) => {\n    console.log(\"[ DB ] ConexÃ£o estabelecida com sucesso.\");\n    conn.end();\n  })\n  .catch((err: any) => {\n    console.error(\"[ DB ] Erro ao conectar-se ao banco de dados:\", err);\n  });\n\nawait createTables(pool);\n\nexport default pool;\n","import dotenv from \"dotenv\";\nimport { readFileSync } from \"fs\";\nimport { PoolConfig } from \"mariadb\";\n\ndotenv.config();\n\ninterface Certificates {\n  key: Buffer;\n  cert: Buffer;\n}\n\ninterface App {\n  PORT: string | number;\n  HOST?: string;\n  baseUrl?: string;\n}\n\ninterface Cors {\n  origin: string;\n  credentials: boolean;\n}\n\nconst mariadbConfig: PoolConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  port: Number(process.env.DB_PORT),\n  connectionLimit: 5,\n};\n\ninterface Config {\n  certificates: Certificates;\n  app: App;\n  cors: Cors;\n  mariadb: PoolConfig;\n}\n\nconst config: Config = {\n  certificates: {\n    key: readFileSync(\"./server.key\"),\n    cert: readFileSync(\"./server.crt\"),\n  },\n  app: {\n    PORT: process.env.PORT ?? 3002,\n    HOST: process.env.HOST,\n    baseUrl: process.env.BASE_URL,\n  },\n  cors: {\n    origin: \"https://localhost:5173\",\n    credentials: true,\n  },\n  mariadb: mariadbConfig,\n};\n\nexport default config;\n","import { readFile } from \"fs\";\n\nconst filePath = \"./create_tables.sql\";\n\nfunction readSQLFile(filePath: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    readFile(filePath, \"utf8\", (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nasync function executeSQLCommands(\n  connection: any,\n  sqlCommands: string[]\n): Promise<void> {\n  try {\n    for (const sqlCommand of sqlCommands) {\n      await connection.query(sqlCommand);\n    }\n    console.log(\"[ DB ] Tabelas criadas com sucesso.\");\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      const errorMessage: string = error.message;\n      console.error(errorMessage);\n    } else {\n      console.error(\"Ocorreu um erro desconhecido\");\n    }\n  }\n}\n\nasync function createTables(connection: any): Promise<void> {\n  try {\n    const sqlScript = await readSQLFile(filePath);\n    const sqlCommands = sqlScript\n      .split(\";\")\n      .map((command) => command.trim())\n      .filter((command) => command);\n    await executeSQLCommands(connection, sqlCommands);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      const errorMessage: string = error.message;\n      console.error(errorMessage);\n    } else {\n      console.error(\"Ocorreu um erro desconhecido\");\n    }\n  }\n}\n\nexport { createTables };\n"],"mappings":";AAAA,OAAO,aAAmC;;;ACA1C,OAAO,YAAY;AACnB,SAAS,oBAAoB;AAG7B,OAAO,OAAO;AAkBd,IAAM,gBAA4B;AAAA,EAChC,MAAM,QAAQ,IAAI;AAAA,EAClB,MAAM,QAAQ,IAAI;AAAA,EAClB,UAAU,QAAQ,IAAI;AAAA,EACtB,UAAU,QAAQ,IAAI;AAAA,EACtB,MAAM,OAAO,QAAQ,IAAI,OAAO;AAAA,EAChC,iBAAiB;AACnB;AASA,IAAM,SAAiB;AAAA,EACrB,cAAc;AAAA,IACZ,KAAK,aAAa,cAAc;AAAA,IAChC,MAAM,aAAa,cAAc;AAAA,EACnC;AAAA,EACA,KAAK;AAAA,IACH,MAAM,QAAQ,IAAI,QAAQ;AAAA,IAC1B,MAAM,QAAQ,IAAI;AAAA,IAClB,SAAS,QAAQ,IAAI;AAAA,EACvB;AAAA,EACA,MAAM;AAAA,IACJ,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,SAAS;AACX;AAEA,IAAO,iBAAQ;;;ACvDf,SAAS,gBAAgB;AAEzB,IAAM,WAAW;AAEjB,SAAS,YAAYA,WAAmC;AACtD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,aAASA,WAAU,QAAQ,CAAC,OAAO,SAAS;AAC1C,UAAI,OAAO;AACT,eAAO,KAAK;AAAA,MACd,OAAO;AACL,gBAAQ,IAAI;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AAEA,eAAe,mBACb,YACA,aACe;AACf,MAAI;AACF,eAAW,cAAc,aAAa;AACpC,YAAM,WAAW,MAAM,UAAU;AAAA,IACnC;AACA,YAAQ,IAAI,qCAAqC;AAAA,EACnD,SAAS,OAAP;AACA,QAAI,iBAAiB,OAAO;AAC1B,YAAM,eAAuB,MAAM;AACnC,cAAQ,MAAM,YAAY;AAAA,IAC5B,OAAO;AACL,cAAQ,MAAM,8BAA8B;AAAA,IAC9C;AAAA,EACF;AACF;AAEA,eAAe,aAAa,YAAgC;AAC1D,MAAI;AACF,UAAM,YAAY,MAAM,YAAY,QAAQ;AAC5C,UAAM,cAAc,UACjB,MAAM,GAAG,EACT,IAAI,CAAC,YAAY,QAAQ,KAAK,CAAC,EAC/B,OAAO,CAAC,YAAY,OAAO;AAC9B,UAAM,mBAAmB,YAAY,WAAW;AAAA,EAClD,SAAS,OAAP;AACA,QAAI,iBAAiB,OAAO;AAC1B,YAAM,eAAuB,MAAM;AACnC,cAAQ,MAAM,YAAY;AAAA,IAC5B,OAAO;AACL,cAAQ,MAAM,8BAA8B;AAAA,IAC9C;AAAA,EACF;AACF;;;AF/CA,IAAM,OAAa,QAAQ,WAAW,eAAO,OAAO;AAEpD,KACG,cAAc,EACd,KAAK,CAAC,SAAqB;AAC1B,UAAQ,IAAI,6CAA0C;AACtD,OAAK,IAAI;AACX,CAAC,EACA,MAAM,CAAC,QAAa;AACnB,UAAQ,MAAM,iDAAiD,GAAG;AACpE,CAAC;AAEH,MAAM,aAAa,IAAI;AAEvB,IAAO,kBAAQ;","names":["filePath"]}